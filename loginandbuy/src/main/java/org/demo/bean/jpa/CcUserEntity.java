/*
 * Created on 2 Oct 2017 ( Time 15:15:12 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.demo.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "cc_user"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="cc_user", catalog="cryptocurrency" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="CcUserEntity.countAll", query="SELECT COUNT(x) FROM CcUserEntity x" )
} )
public class CcUserEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="USER_ID", nullable=false)
    private Integer    userId       ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="EMAIL_ID", nullable=false, length=40)
    private String     emailId      ;

    @Column(name="FIRST_NAME", length=30)
    private String     firstName    ;

    @Column(name="LAST_NAME", length=30)
    private String     lastName     ;

    @Column(name="USER_PASSWORD", length=128)
    private String     userPassword ;

    @Column(name="ACCT_NO")
    private Integer    acctNo       ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="CREATE_DATE")
    private Date       createDate   ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="UPDATE_DATE")
    private Date       updateDate   ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @OneToMany(mappedBy="ccUser", targetEntity=CcCurrencyPurchasesEntity.class)
    private List<CcCurrencyPurchasesEntity> listOfCcCurrencyPurchases;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public CcUserEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setUserId( Integer userId ) {
        this.userId = userId ;
    }
    public Integer getUserId() {
        return this.userId;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : EMAIL_ID ( VARCHAR ) 
    public void setEmailId( String emailId ) {
        this.emailId = emailId;
    }
    public String getEmailId() {
        return this.emailId;
    }

    //--- DATABASE MAPPING : FIRST_NAME ( VARCHAR ) 
    public void setFirstName( String firstName ) {
        this.firstName = firstName;
    }
    public String getFirstName() {
        return this.firstName;
    }

    //--- DATABASE MAPPING : LAST_NAME ( VARCHAR ) 
    public void setLastName( String lastName ) {
        this.lastName = lastName;
    }
    public String getLastName() {
        return this.lastName;
    }

    //--- DATABASE MAPPING : USER_PASSWORD ( CHAR ) 
    public void setUserPassword( String userPassword ) {
        this.userPassword = userPassword;
    }
    public String getUserPassword() {
        return this.userPassword;
    }

    //--- DATABASE MAPPING : ACCT_NO ( INT ) 
    public void setAcctNo( Integer acctNo ) {
        this.acctNo = acctNo;
    }
    public Integer getAcctNo() {
        return this.acctNo;
    }

    //--- DATABASE MAPPING : CREATE_DATE ( DATETIME ) 
    public void setCreateDate( Date createDate ) {
        this.createDate = createDate;
    }
    public Date getCreateDate() {
        return this.createDate;
    }

    //--- DATABASE MAPPING : UPDATE_DATE ( DATETIME ) 
    public void setUpdateDate( Date updateDate ) {
        this.updateDate = updateDate;
    }
    public Date getUpdateDate() {
        return this.updateDate;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfCcCurrencyPurchases( List<CcCurrencyPurchasesEntity> listOfCcCurrencyPurchases ) {
        this.listOfCcCurrencyPurchases = listOfCcCurrencyPurchases;
    }
    public List<CcCurrencyPurchasesEntity> getListOfCcCurrencyPurchases() {
        return this.listOfCcCurrencyPurchases;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(userId);
        sb.append("]:"); 
        sb.append(emailId);
        sb.append("|");
        sb.append(firstName);
        sb.append("|");
        sb.append(lastName);
        sb.append("|");
        sb.append(userPassword);
        sb.append("|");
        sb.append(acctNo);
        sb.append("|");
        sb.append(createDate);
        sb.append("|");
        sb.append(updateDate);
        return sb.toString(); 
    } 

}
